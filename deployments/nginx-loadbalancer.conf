events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Load balancing configuration
    upstream backend {
        # Load balancing method: least_conn for better distribution
        least_conn;
        
        # Application instances
        server localhost:8081 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:8082 weight=1 max_fails=3 fail_timeout=30s;
        server localhost:8083 weight=1 max_fails=3 fail_timeout=30s;
        
        # Health check configuration
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Monitoring upstream for health checks
    upstream health_backend {
        server localhost:8081;
        server localhost:8082;
        server localhost:8083;
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=transactions:10m rate=50r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 1M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml;

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Connection limits
        limit_conn perip 20;
        limit_conn perserver 1000;

        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Load-Balancer "nginx" always;

        # Health check endpoint (direct, no load balancing)
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Load balancer status page
        location /load-balancer-status {
            access_log off;
            return 200 "Load Balancer: Active\nUpstream Servers: 3\nMethod: least_conn\nStatus: Operational\n";
            add_header Content-Type text/plain;
        }

        # Authentication endpoints (strict rate limiting)
        location ~ ^/api/v1/auth/(login|register) {
            limit_req zone=login burst=10 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Load-Balancer "nginx";
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Transaction endpoints (moderate rate limiting)
        location ~ ^/api/v1/transactions/ {
            limit_req zone=transactions burst=30 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Load-Balancer "nginx";
            
            # Timeout settings for financial operations
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Retry on failures
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 10s;
        }

        # General API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Load-Balancer "nginx";
            
            # Timeout settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
            
            # Connection pooling
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Retry on failures
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 15s;
        }

        # Health check endpoint (no rate limiting)
        location /api/v1/health {
            proxy_pass http://health_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Load-Balancer "nginx";
            
            # Quick health checks
            proxy_connect_timeout 2s;
            proxy_send_timeout 3s;
            proxy_read_timeout 3s;
            
            # No retries for health checks
            proxy_next_upstream off;
        }

        # Metrics endpoint (restricted access)
        location /metrics {
            # Allow only internal networks and localhost
            allow 127.0.0.1;
            allow ::1;
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default location (API documentation or 404)
        location / {
            return 404 '{"error": "Not Found", "message": "Use /api/v1/ endpoints"}';
            add_header Content-Type application/json;
        }

        # Error pages
        error_page 404 = @error404;
        error_page 500 502 503 504 = @error5xx;

        location @error404 {
            return 404 '{"error": "Not Found", "code": 404}';
            add_header Content-Type application/json;
        }

        location @error5xx {
            return 500 '{"error": "Internal Server Error", "code": 500}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server configuration (for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #
    #     # Same location blocks as HTTP server
    # }
}
